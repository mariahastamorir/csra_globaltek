-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.usuario
(
    id serial NOT NULL,
    nombre character varying,
    numero_documento character varying,
    telefono character varying,
    correo character varying NOT NULL,
    contrasena character varying NOT NULL,
    is_active boolean,
    is_staff boolean,
    id_tipodocumento integer,
    id_empresa integer,
    id_permisosxroles integer,
    id_otp_code integer,
    CONSTRAINT pk_id_usuario PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    nombre character varying NOT NULL,
    CONSTRAINT pk_id_rol PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.permisos
(
    id serial NOT NULL,
    nombre character varying,
    CONSTRAINT pk_id_permisos PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.empresa
(
    id serial NOT NULL,
    nombre character varying NOT NULL,
    nit character varying NOT NULL,
    CONSTRAINT pk_id_empresa PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.activo
(
    id serial NOT NULL,
    nombre character varying,
    proceso_area character varying,
    tipo character varying,
    descripcion character varying,
    valor integer,
    datos_personales character varying,
    dueno_activo character varying,
    custodio character varying,
    id_estadoxactivo integer,
    CONSTRAINT pk_id_activo PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.otp_code
(
    id serial NOT NULL,
    id_usuario integer,
    otp_code timestamp with time zone,
    created_at timestamp with time zone,
    CONSTRAINT pk_id_otp_code PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.confidencialidad
(
    id serial NOT NULL,
    estado character varying,
    valor integer,
    CONSTRAINT pk_id_confidencialidad PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.integridad
(
    id serial NOT NULL,
    estado character varying,
    valor integer,
    CONSTRAINT pk_id_integridad PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.disponibilidad
(
    id serial NOT NULL,
    estado character varying,
    valor integer,
    CONSTRAINT pk_id_disponibilidad PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.criticidad
(
    id serial NOT NULL,
    estado character varying,
    valor integer,
    CONSTRAINT pk_id_criticidad PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.estadoxactivo
(
    id serial NOT NULL,
    id_activo integer,
    id_confidencialidad integer,
    id_integridad integer,
    id_disponibilidad integer,
    id_criticidad integer,
    CONSTRAINT pk_id_estadoxactivo PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.permisosxroles
(
    id serial NOT NULL,
    id_roles integer,
    id_permisos integer,
    CONSTRAINT pk_id_permisosxroles PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipodocumento
(
    id serial NOT NULL,
    nombre character varying,
    CONSTRAINT pk_id_tipodocumento PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fk_id_tipodocumento FOREIGN KEY (id_tipodocumento)
    REFERENCES public.tipodocumento (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fk_id_empresa FOREIGN KEY (id_empresa)
    REFERENCES public.empresa (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fk_id_permisosxroles FOREIGN KEY (id_permisosxroles)
    REFERENCES public.permisosxroles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fk_id_otp_code FOREIGN KEY (id_otp_code)
    REFERENCES public.otp_code (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activo
    ADD CONSTRAINT fk_id_estadoxactivo FOREIGN KEY (id_estadoxactivo)
    REFERENCES public.estadoxactivo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.estadoxactivo
    ADD CONSTRAINT fk_id_activo FOREIGN KEY (id_activo)
    REFERENCES public.activo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.estadoxactivo
    ADD CONSTRAINT fk_id_confidencialidad FOREIGN KEY (id_confidencialidad)
    REFERENCES public.confidencialidad (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.estadoxactivo
    ADD CONSTRAINT fk_id_integridad FOREIGN KEY (id_integridad)
    REFERENCES public.integridad (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.estadoxactivo
    ADD CONSTRAINT fk_id_disponibilidad FOREIGN KEY (id_disponibilidad)
    REFERENCES public.disponibilidad (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.estadoxactivo
    ADD CONSTRAINT fk_id_criticidad FOREIGN KEY (id_criticidad)
    REFERENCES public.criticidad (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.permisosxroles
    ADD CONSTRAINT fk_id_roles FOREIGN KEY (id_roles)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.permisosxroles
    ADD CONSTRAINT fk_id_permisos FOREIGN KEY (id_permisos)
    REFERENCES public.permisos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;